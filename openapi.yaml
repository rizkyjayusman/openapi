openapi: "3.0.1"
info:
  title: "Open API Example by Rizky Jayusman"
  description: "This is a sample OpenAPI 3.0 server.  You can find out more about\
    \ OpenAPI at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/)."
  contact:
    name: "Rizky Jayusman"
    url: "http://rizkyjayusman.com"
    email: "rizky.jayusman96@gmail.com"
  license:
    name: "MIT Licence"
    url: "https://github.com/thombergs/code-examples/blob/master/LICENSE"
servers:
  - url: "http://localhost:8080"
tags:
  - name: "Todo API"
    description: "Todo API"
paths:
  /api/todos/{id}:
    get:
      tags:
        - "Todo API"
      summary: "Get Todo Detail"
      description: "Get Todo by ID"
      operationId: "findById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Error"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Todo"
      security:
        - api: []
    put:
      tags:
        - "Todo API"
      summary: "Update Todo"
      description: "Update an existing Todo"
      operationId: "update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Todo"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Todo"
      security:
        - api: []
    delete:
      tags:
        - "Todo API"
      summary: "Delete Todo"
      description: "Delete an existing Todo"
      operationId: "delete"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "No Content"
      security:
        - api: []
  /api/todos:
    get:
      tags:
        - "Todo API"
      summary: "Get All Todo List"
      description: "Get All Todo List"
      operationId: "findAll"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Todo"
      security:
        - api: []
    post:
      tags:
        - "Todo API"
      summary: "Save Todo"
      description: "Create new Todo"
      operationId: "save"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Todo"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Todo"
      security:
        - api: []
components:
  schemas:
    Todo:
      type: "object"
    Error:
      type: "object"
      properties:
        status:
          type: "string"
        message:
          type: "string"
  securitySchemes:
    api:
      type: "http"
      in: "header"
      scheme: "basic"
